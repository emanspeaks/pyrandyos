name: Upload Python Package to PyPI
on:
  push:
    branches:
      - develop
  pull_request:
    branches:
      - main

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build-pypi:
    name: Build PyPI distribution
    runs-on: ubuntu-latest
    permissions:
      contents: write  # Required to push back to repo
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Important: gets full git history for versioning
          token: ${{ secrets.GITHUB_TOKEN }}  # enables pushing

      - uses: actions/setup-python@v5
        with:
          python-version: "3.x"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install hatch

      - name: Generate version file
        run: |
          # This creates the _version.py file
          hatch build --target wheel

          # Extract just the version
          VERSION=$(hatch version)
          echo "Generated version: $VERSION"

          # Create the version file manually if it doesn't exist
          mkdir -p pyrandyos
          echo "__version__ = '$VERSION'" > pyrandyos/_version.py

      - name: Commit version file
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"

          if [ -f pyrandyos/_version.py ]; then
            git add pyrandyos/_version.py
            if ! git diff --staged --quiet; then
              git commit -m "Auto-update version to $(hatch version) [skip ci]"
              git push
            fi
          fi

      - name: Build package (after version commit)
        run: |
          hatch build

      - uses: actions/upload-artifact@v4
        with:
          name: python-package-distributions
          path: dist/

  test-pypi-publish:
    name: Publish to Test PyPI
    if: github.event_name == 'pull_request'
    needs:
      - build-pypi
    runs-on: ubuntu-latest
    environment:
      name: test-pypi
      url: https://test.pypi.org/p/pyrandyos
    permissions:
      id-token: write
    steps:
      - uses: actions/download-artifact@v4
        with:
          name: python-package-distributions
          path: dist/

      - name: Publish package to Test PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          repository-url: https://test.pypi.org/legacy/

  pypi-publish:
    name: Publish tagged versions to PyPI
    if: startsWith(github.ref, 'refs/tags/v')
    needs:
      - build-pypi
    runs-on: ubuntu-latest
    environment:
      name: pypi
      url: https://pypi.org/p/pyrandyos
    permissions:
      id-token: write
    steps:
      - uses: actions/download-artifact@v4
        with:
          name: python-package-distributions
          path: dist/

      - name: Publish package to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
